{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello, World!","text":""},{"location":"#hello-world","title":"Hello, World!","text":"<p> I'm Matt Shaw, a full-stack Principal Software Developer with 17 years experience of software development in central government. I have a leading role on key projects in a multi-million pound digital transformation programme, delivering digital services that follow the government Service Manual and Design Principles.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/#blog","title":"Blog","text":""},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/","title":"Top 10 features of truly agile teams","text":"","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#top-10-features-of-truly-agile-teams","title":"Top 10 features of truly agile teams","text":"<p>I've been very lucky to have worked alongside some hugely talented people from the Government Digital Service on the Land Registry Concept and Alpha projects. Although I was experienced in working with the Scrum framework before this, I have come to better appreciate what it means to be a truly agile team.</p> <p>After reflecting on what made the team so great, I've drawn up this top ten list of the things that, if we hadn't done them, would have seriously impacted on the teams' culture, productivity, pace, and enjoyment.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#open-working-environment","title":"Open working environment","text":"<p>Create an unrestricted, open working environment that doesn't inhibit the team from innovating. Give the team the tools and space they need to do their jobs, in the best way they decide they can, and trust them to do it.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#promote-culture-over-everything-else","title":"Promote culture over everything else","text":"<p>With the right culture, the team will perform the best practices they can and constantly seek to find better ones. Culture is the collective attitude of everyone on the team and attitudes can only be changed by doing, not by telling.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#work-in-the-open-as-far-as-possible","title":"Work in the open, as far as possible","text":"<p>Source code should be held in an open repository such as GitHub and made publicly available. Private or sensitive information should always be kept as such.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#adopt-open-standards","title":"Adopt open standards","text":"<p>No closed-source, proprietary, costly software. Working to interoperable open standards makes it easier to change technologies if needed.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#empower-the-team","title":"Empower the team","text":"<p>Tools, technology, practices, and culture should all be decided upon by the team, because they are best placed to make those decisions by being the ones using/doing them.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#ask-what-is-the-user-need","title":"Ask \"What is the user need?\"","text":"<p>If there isn't one, stop doing it. If it's unclear, more user research is required.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#multidisciplinary-team","title":"Multidisciplinary team","text":"<p>Everyone has specialisms; however, every team member should have at least a base level of knowledge in all disciplines. Everyone should be able to code, and coding should be a part of all disciplines.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#work-collaboratively","title":"Work collaboratively","text":"<p>Do pair programming in a collaborative and supportive working environment, both within and between specialisms and levels of ability or knowledge.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#learn-by-doing","title":"Learn by doing","text":"<p>Make lots of mistakes, make them fast, learn from them then try again until you don't make them anymore.</p>","tags":["Agile","Team"]},{"location":"blog/2014/12/08/top-10-features-of-truly-agile-teams/#dont-do-agile-be-agile","title":"Don't do agile, be agile","text":"<p>Scrum is great, as a framework, not as a rule. If it works keep it, if it doesn't change it.</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Agile","Team"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/","title":"My health and fitness journey","text":"","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#my-health-and-fitness-journey","title":"My health and fitness journey","text":"<p>I am starting a new health and fitness journey and documenting my progress. Hopefully this will help to keep me accountable to myself, and maybe even help some other people with their own journey. I'm going to approach this in a scientific, mathematical, analytical and evidence-based way, so expect lots of stats and graphs!</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#why-am-i-doing-this","title":"Why am I doing this?","text":"<p>I've recently turned 39, and whilst I don't have any particular qualms about hitting the big four zero, it seems like a good milestone to aim for. I don't really do birthdays, I've never enjoyed the attention, but one thing I have thought for some time is that I would love to take my family away on holiday for my 40th.</p> <p>I'm not happy with my body image, but more importantly my health and fitness (both physical and mental) has suffered for some time while other aspects of my life have taken priority. I desperately don't want to lack the confidence to even take my shirt off on the beach, for fear of being \"that fat guy\". I realise that sounds quite vain, but really, I just don't want to let social anxiety keep me from enjoying life. So even though it's embarrassing, I know that admitting and accepting there's a problem is the first step:</p> Date Weight (kg) Body fat 29/08/24 94.4 38.3% <p>This is ground zero, the heaviest and probably the most unfit I have ever been. At least I know this the worst it's going to get.</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#where-do-i-start","title":"Where do I start?","text":"<p>I know from experience that setting a large, far-future goal isn't going to keep me motivated. I need small, incremental, achievable goals, and to be able to clearly see my progress against them. This keeps me on the dopamine reward train. So, I'm setting interim goals of losing 5% of my bodyweight at a time. Each time I achieve one of these small goals, I set another 5% reduction goal, and so on. But I can't do that forever, so what's my ultimate goal? Even if it isn't what I'm working towards right now, I still need to know where I'm trying to get to.</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#where-am-i-going","title":"Where am I going?","text":"<p>I've done a lot of reading and research about \"ideal weight\" and of course there are many different studies and methodologies that lead to many different answers. For myself as a 172 cm tall, 39-year-old male:</p> Formula Weight (kg) Broca (1871) 72 Devine (1974) 68 Hamwi (1964) 69 Lorentz (1929) 67 Miller (1983) 67 Peterson (2016) 65 Robinson (1983) 67 <p>Taking an average of those results gives me an ideal weight of 67.9 kg, which seems like reasonable collective wisdom. Then there's BMI, which says I should be between 54.8 kg and 73.8 kg to be in the healthy weight range. Whilst these methods don't take body composition into account and aren't absolutely accurate, at least they are consistent metrics to start from.</p> <p>I'm going to set my target weight range as between the top end of the BMI healthy range, and my average ideal weight, e.g. between 67.9 kg and 73.8 kg. Now we're getting somewhere, but how do I achieve that?</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#how-do-i-get-there","title":"How do I get there?","text":"<p>It's simply a case of how much, and what type, of diet and exercise I need to do:</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#exercise","title":"Exercise","text":"<p>To get to my target weight range, I want to reduce my body fat percentage whilst maintaining lean muscle mass. The most efficient way to achieve that is through lower intensity and longer duration cardio exercise. I used to do a lot of running, but my heart rate would nearly always be in the anaerobic zone, so whilst I would burn more calories overall at a higher intensity, the source of that energy would be from a greater percentage of glycogen, and less from stored fats. I need to be aware of my heart rate while exercising, and to choose activities where I can moderate and pace myself accordingly.</p> <p>Much like ideal weight, there's a lot of different research and studies into maximum heart rate (HR<sub>max</sub>) and heart rate zones. It's fair to say there's not a definitive answer, and it very much depends on the individual, so I'm going to go with collective wisdom again:</p> Name Formula HR<sub>max</sub> (bpm) Haskell &amp; Fox 220 \u2212 Age 181 Inbar 205.8 \u2212 (0.685 \u00d7 Age) 179 Nes 211 \u2212 (0.64 \u00d7 Age) 186 Oakland nonlinear 192 \u2212 (0.007 \u00d7 Age<sup>2</sup>) 181 Tanaka, Monahan &amp; Seals 208 \u2212 (0.7 \u00d7 Age) 181 Wingate 208.609 \u2212 (0.716 \u00d7 Age) 181 <p>Taking a rounded average gives me a HR<sub>max</sub> of 181 bpm. But what heart rate should I target in order to maximise the percentage of stored fat used as my primary fuel source? Unsurprisingly again, it depends!</p> <p>The definition of heart rate zones varies quite significantly too, with Polar, Garmin, Fitbit and Strava all using different percentage ranges to delineate them. Their names vary too, such as \"Zone 2\", \"Easy\", \"Light\" and \"Moderate\". In any case, it's all about the target heart rate (THR) percentage of my HR<sub>max</sub> and fortunately there's some general consensus that 60% to 80% is a good range, with the sweet spot at around 70%.</p> <p>70% of 181 is 127 bpm, so job done? No, not quite. A straight percentage doesn't take into account heart rate reserve (HR<sub>reserve</sub>), which is my HR<sub>max</sub> minus my resting heart rate (HR<sub>rest</sub>). This will change over time, as I get fitter my HR<sub>rest</sub> will decrease, giving me a higher HR<sub>reserve</sub>. The Karvonen formula takes this into account: THR = (HR<sub>reserve</sub> \u00d7 % intensity) + HR<sub>rest</sub>.</p> <p>Given my current HR<sub>rest</sub> of 61 bpm:</p> Formula 60% 65% 70% 75% 80% Percentage 109 118 127 136 145 Karvonen 133 139 145 151 157 <p>I need to exercise for at least 150 minutes per week at a target heart rate of around 145 bpm.</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#diet","title":"Diet","text":"<p>Weight loss happens in the kitchen, you can't out-train a bad diet. By far the biggest contributor to my progress will be consistently maintaining a calorie deficit, i.e. burning more calories than I consume. Of course, I'm not going to just starve myself, so a mixed and healthy diet is important, not just the latest trend of either cutting out or promoting one food group over another. Plenty of lean protein to keep the hunger at bay (and increase the Thermal Effect of Food, using more energy to digest it), low sugar, low fat, lots of water, and as little highly processed food as possible.</p> <p>I'm still going to eat meals with my family, which will include the occasional takeaway, as I know that denying myself everything that I enjoy will only lead to resenting the process and failing to achieve my goals. But unhealthy snacks, sugary drinks and alcohol will be kept to an absolute minimum.</p> <p>To work out how many calories I should consume, first I need to understand my Basal Metabolic Rate (BMR); the number of calories my body needs per day just being alive. This is based on gender, age, height, weight and lean mass, and again there are different formulas for calculating this. Based on my starting weight of 94.4 kg:</p> Name Formula BMR (kcal/day) Cunningham 500 + (22 x Lean mass) 1780 Harris-Benedict (Original) 66.47 + (13.75 x Weight) + (5.003 x Height) - (6.755 x Age) 1962 Harris-Benedict (Revised) 88.362 + (13.397 x Weight) + (4.799 x Height) - (5.677 x Age) 1957 Katch-McArdle 370 + (21.6 x Lean mass) 1627 Mifflin-St Jeor (10 x Weight) + (6.25 x Height) - (5 x Age) + 5 1829 Owen 879 + (10.2 x Weight) 1842 Schofield 11.6 x Weight + 879 1974 <p>Taking an average gives me a BMR of 1853 kcal per day. From there I can work out my Total Daily Energy Expenditure (TDEE) which uses a multiplier to take into account my activity level:</p> Activity level Multiplier TDEE (kcal/day) Sedentary 1.2 2224 Light exercise (1-2 days a week) 1.375 2548 Moderate exercise (3-5 days a week) 1.55 2872 Heavy exercise (6-7 days a week) 1.725 3196 Athlete (2x a day) 1.9 3521 <p>I want to do my 150 minutes of exercise per week over 3 days, so the \"moderate exercise\" multiplier gives me a TDEE of 2872 kcal per day. But, that's to maintain my current (starting) weight. A healthy weight loss of between 0.4 kg and 0.9 kg per week requires a calorie deficit of between 500 kcal to 750 kcal per day. So, I need to limit my intake to between 1872 to 2122 calories per day, in addition to exercise, to create a consistent deficit. As my weight reduces, the number of calories needed will reduce too, so I will need to evaluate this regularly.</p> <p>But 1800 calories of chips every day isn't going to help me, so where should those calories come from? Thats where macronutrients come in; the percentage of carbohydrates, protein and fat in my overall diet. To help preserve lean mass, support recovery and satiety I need to prioritise lean protein, with about 35% of my calories coming from this source. I also need to keep fat consumption low, but not cut out altogether to support hormones and joint health, for about 25% of my calorie intake. The remaining 40% is made up of carbohydrates, giving me fuel for exercise but without overloading calories.</p> <p>To work out how much of each nutrient I need, multiply my target calorie intake by the target nutrient percentage, then divide that by the number of calories per gram:</p> Nutrient Ratio Calories Calories per Gram Grams Protein 35% 655 4 kcal/g 164 Fat 25% 468 9 kcal/g 52 Carbohydrate 40% 749 4 kcal/g 187","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#how-long-will-it-take","title":"How long will it take?","text":"<p>I want to reach and maintain my weight in my target range by my 40th birthday, which gives me just under a year to achieve it. If I plot a loss of between 0.4 kg and 0.9 kg per week you can see the cone I'm aiming to stay within:</p> <p></p> <p>With no other data yet I can only make an informed guess at best (#NoEstimates ). As time goes on, I'll be able to refine increasingly accurate projections based on empirical evidence and data. As a starting point though:</p> Interim goal (kg) Best case Worst case 89.7 06/10/24 24/11/24 85.2 10/11/24 09/02/25 80.9 15/12/24 27/04/25 76.9 12/01/25 06/07/25 73.0 16/02/25 07/09/25 69.4 16/03/25 09/11/25","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/08/29/my-health-and-fitness-journey/#lets-go","title":"Let's go!","text":"<p>I'll been keeping track of my progress week-by-week and sharing updates in this post.</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/09/05/fitness-progress/","title":"Fitness progress","text":"","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/09/05/fitness-progress/#fitness-progress","title":"Fitness progress","text":"<p>Tracking my ongoing progress towards my health and fitness goals. See my original post for what I'm trying to achieve and how I'm doing it.</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/09/05/fitness-progress/#weight","title":"Weight","text":"Data Week Weight (kg) Difference (kg) Total (kg) 52 69.7 +0.4 -24.7 51 69.3 -0.5 -25.1 50 69.8 -0.6 -24.6 49 70.4 -1.2 -24.0 48 71.6 0.0 -22.8 47 71.6 0.0 -22.8 46 71.6 0.0 -22.8 45 71.6 -0.6 -22.8 44 72.2 -1.0 -22.2 43 73.2 -0.5 -21.2 42 73.7 0.0 -20.7 41 73.7 0.7 -20.7 40 73.0 -1.0 -21.4 39 74.0 -0.6 -20.4 38 74.6 0.3 -19.8 37 74.3 -0.9 -20.1 36 75.2 -1.4 -19.2 35 76.6 0.4 -17.8 34 76.2 -0.4 -18.2 33 76.6 0.2 -17.8 32 76.4 -1.4 -18.0 31 77.8 0.0 -16.6 30 77.8 0.0 -16.6 29 77.8 -0.6 -16.6 28 78.4 0.0 -16.0 27 78.4 -1.2 -16.0 26 79.6 -0.6 -14.8 25 80.2 -0.3 -14.2 24 80.5 -0.2 -13.9 23 80.7 -0.4 -13.7 22 81.1 -0.8 -13.3 21 81.9 0.0 -12.5 20 81.9 -0.5 -12.5 19 82.4 -1.3 -12.0 18 83.7 -0.4 -10.7 17 84.1 0.0 -10.3 16 84.1 -0.8 -10.3 15 84.9 +0.5 -9.5 14 84.4 -0.6 -10.0 13 85.0 -0.5 -9.4 12 85.5 -1.3 -8.9 11 85.5 -1.3 -8.9 10 86.8 -0.1 -7.6 9 86.9 -0.6 -7.5 8 87.5 -1.4 -6.9 7 88.9 -0.4 -5.5 6 89.3 +0.2 -5.1 5 89.1 -1.3 -5.3 4 90.4 -1.5 -4.0 3 91.9 -1.2 -2.5 2 93.1 -0.7 -1.3 1 93.8 -0.6 -0.6 0 94.4","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/09/05/fitness-progress/#composition","title":"Composition","text":"Data Week Body fat Lean mass (kg) Fat mass (kg) 52 20.3% 55.6 14.1 51 19.9% 55.5 13.8 50 20.3% 55.6 14.2 49 20.7% 55.8 14.6 48 21.7% 56.1 15.5 47 21.7% 56.1 15.5 46 21.7% 56.1 15.5 45 21.6% 56.1 15.5 44 22.0% 56.3 15.9 43 22.9% 56.4 16.8 42 23.2% 56.6 17.1 41 23.1% 56.7 17.0 40 22.6% 56.5 16.5 39 23.3% 56.8 17.2 38 23.8% 56.8 17.8 37 23.5% 56.8 17.5 36 24.2% 57.0 18.2 35 25.3% 57.2 19.4 34 25.0% 57.2 19.1 33 25.2% 57.3 19.3 32 25.0% 57.3 19.1 31 26.2% 57.4 20.4 30 26.2% 57.4 20.4 29 26.2% 57.4 20.4 28 26.5% 57.6 20.8 27 26.6% 57.5 20.9 26 27.3% 57.9 21.7 25 27.9% 57.8 22.4 24 28.1% 57.9 22.6 23 28.3% 57.9 22.8 22 28.5% 58.0 23.1 21 29.4% 57.8 24.1 20 29.4% 57.8 24.1 19 29.6% 58.0 24.4 18 30.4% 58.3 25.4 17 30.7% 58.3 25.8 16 30.7% 58.3 25.8 15 31.4% 58.2 26.7 14 30.9% 58.3 26.1 13 31.5% 58.2 26.8 12 31.8% 58.3 27.2 11 31.8% 58.3 27.2 10 32.8% 58.3 28.5 9 32.8% 58.4 28.5 8 33.2% 58.5 29.1 7 34.1% 58.6 30.3 6 34.6% 58.4 30.9 5 34.3% 58.5 30.6 4 35.5% 58.3 32.1 3 36.6% 58.3 33.6 2 37.3% 58.4 34.7 1 37.8% 58.3 35.5 0 38.3% 58.2 36.2","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/09/05/fitness-progress/#bmi","title":"BMI","text":"Data Week BMI 52 23.6 51 23.4 50 23.6 49 23.8 48 24.2 47 24.2 46 24.2 45 24.2 44 24.4 43 24.7 42 24.9 41 24.9 40 24.7 39 25.0 38 25.2 37 25.1 36 25.4 35 25.9 34 25.8 33 25.9 32 25.8 31 26.3 30 26.3 29 26.3 28 26.5 27 26.5 26 26.9 25 27.1 24 27.2 23 27.3 22 27.4 21 27.7 20 27.7 19 27.9 18 28.3 17 28.4 16 28.4 15 28.7 14 28.5 13 28.7 12 28.9 11 28.9 10 29.3 9 29.4 8 29.6 7 30.1 6 30.2 5 30.1 4 30.6 3 31.1 2 31.5 1 31.7 0 31.9","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/09/05/fitness-progress/#resting-heart-rate","title":"Resting heart rate","text":"Data Week Resting heart rate 52 55 51 56 50 56 49 53 48 54 47 56 46 62 45 66 44 61 43 58 42 55 41 57 40 55 39 57 38 58 37 56 36 58 35 58 34 57 33 57 32 58 31 58 30 59 29 60 28 60 27 57 26 56 25 58 24 59 23 56 22 57 21 58 20 59 19 60 18 60 17 62 16 63 15 61 14 64 13 61 12 61 11 59 10 59 9 60 8 61 7 62 6 61 5 61 4 63 3 66 2 64 1 61 0 61","tags":["Fitness","Weight Loss"]},{"location":"blog/2024/09/05/fitness-progress/#goals","title":"Goals","text":"Goal weight (kg) Achieved 89.7 2024-10-06 85.2 2024-12-01 80.9 2025-02-09 76.9 2025-04-13 73.0 2025-06-09 69.4 2025-08-27 <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Fitness","Weight Loss"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/","title":"The Eight Wastes of Modern Software Delivery","text":"","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#the-eight-wastes-of-modern-software-delivery","title":"The Eight Wastes of Modern Software Delivery","text":"<p>In manufacturing, Lean thinking revolutionised how products were built by relentlessly eliminating waste. Whilst the \"software factory\" analogy isn't perfect, the core Lean principle of eliminating waste underpins modern software delivery, from Agile and DevOps to Continuous Delivery and Platform Engineering.</p> <p>In Japanese, Muda means \"waste\" or \"futility\" \u2014 any activity that consumes resources but creates no value. During the development of the Toyota Production System in the late 1940s through to the 1970s, Taiichi Ohno identified seven types of waste that hinder efficiency and productivity. Over the years, Lean practitioners have adapted these for software and added a widely recognised eighth form of waste \u2014 often considered the most critical of all.</p> <p>Decades later, research from Accelerate and the DORA program has validated these same Lean principles as the foundation of high-performing software teams. I've seen first-hand how these wastes can slow down even the most well-intentioned teams. This post isn't a theoretical lecture; it's a practical guide based on experience and evidence. Let's explore how each of these eight wastes shows up in software development, and how to spot (and stop) them in your team.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#1-transportation","title":"1. Transportation","text":"<p>In manufacturing, transportation waste is the unnecessary movement of materials \u2014 moving parts without improving them. In software, it's the same pattern made invisible: unnecessary handoffs between people, tools, or environments.</p> <p>Every transfer adds friction and risk. Knowledge gets diluted, priorities drift, and work waits for permission to move. The cost isn't just time \u2014 it's lost clarity, context, and momentum.</p> <p>Reducing transportation means shortening the path from idea to running code in production and giving teams direct ownership of outcomes.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies","title":"Practical Reduction Strategies","text":"<ul> <li>Form cross-functional, outcome-oriented teams to reduce handoffs.</li> <li>Provide self-service environments and standardised tooling.</li> <li>Establish clear communication channels and ownership for tasks and escalations.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>DevOps and Agile break down silos by forming outcome-oriented teams that deliver value independently.</li> <li>Team Topologies defines clear interaction modes \u2014 collaboration, X-as-a-service, facilitation \u2014 making communication intentional rather than chaotic.</li> <li>Platform Engineering provides self-service infrastructure and environments, eliminating manual requests and delays.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact","title":"Validated Performance Impact","text":"<p>This waste is a primary driver of long Lead Time for Changes. Research from Accelerate and the DORA program shows that reducing handoffs and enabling end-to-end ownership directly improves performance \u2014 shortening lead times and increasing Deployment Frequency.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#2-inventory","title":"2. Inventory","text":"<p>In manufacturing, inventory waste means stock that's been built but isn't delivering value. In software, that inventory lives as unfinished code, unmerged branches, bloated backlogs, and half-validated features.</p> <p>Every line of dormant code represents work that's not improving services. It clogs flow, hides defects, and accumulates merge conflicts, stale dependencies, and forgotten context.</p> <p>Lean flow depends on fast feedback. When inventory piles up, feedback slows, and value creation stops. The focus must shift from starting work to finishing work, which requires limiting work-in-progress.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies_1","title":"Practical Reduction Strategies","text":"<ul> <li>Limit WIP to expose bottlenecks and maintain flow.</li> <li>Deliver small, independently deployable increments.</li> <li>Regularly review and prune backlog items that no longer add value.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices_1","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>Kanban visualises and limits WIP, exposing flow bottlenecks early.</li> <li>Continuous Integration keeps the system deployable at all times, while Continuous Delivery automates the path to production.</li> <li>Trunk-Based Development eliminates long-lived branches and ensures small, frequent merges.</li> <li>Agile promotes short iterations and small batch sizes to minimise partially done work.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact_1","title":"Validated Performance Impact","text":"<p>High inventory (WIP) directly impacts both throughput and stability. It is a major contributor to poor Lead Time for Changes, as work waits in queues. It also increases the Change Failure Rate, as large, complex batches are inherently riskier to merge and deploy. The DORA findings strongly support this: keeping work small (low WIP) leads to faster, safer, and more reliable delivery.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#3-motion","title":"3. Motion","text":"<p>Motion waste is the unnecessary movement of people or tools. In software, it shows up as manual setup steps, repetitive configuration, inconsistent environments, or scattered information.</p> <p>Every manual click or repeated setup is friction that interrupts focus. Developers spend time wrestling with tools instead of solving problems.</p> <p>Reducing motion means building a smooth, predictable developer experience \u2014 one where environments, builds, and feedback are automatic, consistent, and close at hand.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies_2","title":"Practical Reduction Strategies","text":"<ul> <li>Automate repetitive tasks like environment setup, builds, and deployments.</li> <li>Provide standardised, containerised environments for consistency.</li> <li>Supply curated scripts, templates, and DX tooling to reduce friction.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices_2","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>Automation and Infrastructure as Code eliminate manual setup and configuration.</li> <li>Platform Engineering provides standardised environments that \"just work.\"</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact_2","title":"Validated Performance Impact","text":"<p>Friction from manual tasks directly harms Lead Time for Changes and often increases the Change Failure Rate due to human error. Data from the DORA studies confirms that automation and standardised development environments are key predictors of elite performance.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#4-waiting","title":"4. Waiting","text":"<p>In manufacturing, idle machines burn money. In software, idle people burn opportunity. Waiting waste is the silent cost of slow builds, blocked reviews, overloaded dependencies, or delayed feedback.</p> <p>Every delay in the feedback loop weakens flow and motivation. Engineers lose context, teams lose pace, and users wait longer for improvements.</p> <p>Reducing waiting means collapsing those loops \u2014 making feedback continuous, not calendar-driven \u2014 so progress never depends on someone else's availability.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies_3","title":"Practical Reduction Strategies","text":"<ul> <li>Automate CI/CD pipelines for fast feedback loops.</li> <li>Enable async reviews and lightweight approvals to remove blockers.</li> <li>Decouple teams and reduce inter-team dependencies to avoid idle time.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices_3","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>Continuous Integration and Continuous Delivery automate builds, tests, and deployments to reduce idle time.</li> <li>Agile and Kanban emphasise small batches and fast feedback.</li> <li>Team Topologies warns against coupling teams so tightly that one's progress blocks another's.</li> <li>Platform Engineering allows developers to self-serve environments and tools instead of waiting for tickets.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact_3","title":"Validated Performance Impact","text":"<p>Waiting is a pure component of Lead Time for Changes. Accelerate research highlights fast feedback loops as one of the strongest predictors of success \u2014 teams that shorten the path from commit to deploy (which reduces waiting) consistently outperform those trapped in slow feedback cycles.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#5-overproduction","title":"5. Overproduction","text":"<p>Overproduction is building more than what's needed \u2014 features without validation, designs without user input, or automation without purpose.</p> <p>It's seductive because it looks like progress. Teams deliver features, fill backlogs, and complete roadmaps \u2014 but if it doesn't meet a user need or improve service quality, it's waste disguised as delivery.</p> <p>Reducing overproduction means focusing relentlessly on outcomes, not output. The measure of success is user value, not feature count.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies_4","title":"Practical Reduction Strategies","text":"<ul> <li>Prioritise work based on validated user needs and service outcomes.</li> <li>Deliver small, incremental releases instead of speculative features.</li> <li>Test assumptions early with MVPs, prototypes or user research.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices_4","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>Agile and Lean Startup thinking focus on delivering the smallest valuable increment.</li> <li>Domain-Driven Design helps teams focus on the core domain \u2014 the areas that create real user and service value.</li> <li>Continuous Delivery encourages small, validated releases rather than speculative ones.</li> <li>Behaviour-Driven Development ensures teams build exactly what's required, no more.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact_4","title":"Validated Performance Impact","text":"<p>Overproduction wastes capacity that could be used to improve Deployment Frequency and, by creating unnecessary code, can increase the Change Failure Rate. The DORA research reinforces that small, validated releases reduce waste and improve stability, allowing teams to achieve both higher throughput and lower Change Failure Rate.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#6-overprocessing","title":"6. Overprocessing","text":"<p>Overprocessing is doing more work than necessary for the same result. In software, it's overengineering, unnecessary abstraction, or process overhead added \"just in case.\"</p> <p>Complexity accumulates quietly \u2014 every extra layer, meeting, or document increases cognitive load and slows adaptation. The result is a system that's heavy where it should be light.</p> <p>Reducing overprocessing means matching effort to value \u2014 choosing simplicity, clarity, and sufficiency over theoretical perfection.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies_5","title":"Practical Reduction Strategies","text":"<ul> <li>Apply YAGNI: implement features only when needed.</li> <li>Keep architectures and abstractions simple.</li> <li>Regularly review code and processes to remove redundant complexity.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices_5","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>Clean Code and Refactoring principles fight overprocessing: clarity over cleverness, simplicity over abstraction.</li> <li>Agile discourages heavyweight ceremonies and unnecessary documentation.</li> <li>Domain-Driven Design uses Bounded Contexts to contain complexity.</li> <li>Team Topologies reinforces small, decoupled teams that own coherent parts of the system.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact_5","title":"Validated Performance Impact","text":"<p>Overprocessing adds unnecessary complexity, which directly increases Lead Time for Changes and can contribute to a higher Change Failure Rate. Studies in Accelerate show that simplifying architectures and streamlining technical and organisational processes reduce lead times and increase Deployment Frequency \u2014 proving that leaner, less bureaucratic systems deliver faster and more reliably.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#7-defects","title":"7. Defects","text":"<p>Defects are the most visible waste \u2014 bugs, outages, regressions, or rework. But every defect is a symptom of a deeper process failure \u2014 a flaw in testing, a gap in understanding, or a rushed review.</p> <p>The later an error surfaces, the more expensive it becomes. Each missed test, unchecked assumption, or rushed review compounds until failure becomes inevitable.</p> <p>Reducing defects means building quality in \u2014 making testing, feedback, and improvement continuous parts of delivery rather than after-the-fact correction.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies_6","title":"Practical Reduction Strategies","text":"<ul> <li>Build quality in with TDD, automated testing, and CI pipelines.</li> <li>Perform code reviews and static analysis for high-risk areas.</li> <li>Monitor production with observability tools to detect and prevent regressions.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices_6","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>Test-Driven Development builds quality in from the start.</li> <li>Pair Programming provides continuous, real-time code review.</li> <li>Behaviour-Driven Development aligns developers, testers, and product on shared expectations.</li> <li>Continuous Delivery embeds testing throughout the pipeline, catching issues early.</li> <li>Clean Code practices \u2014 readability, modularity, testability \u2014 reduce the defect rate over time.</li> <li>DevOps promotes shared responsibility for quality: \"You build it, you run it.\"</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact_6","title":"Validated Performance Impact","text":"<p>This waste is a direct measure of the Change Failure Rate and impacts Time to Restore Service. DORA's data shows that teams that build quality in through automation and shared ownership see lower failure rates and faster recovery \u2014 proving that speed and quality rise together.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#8-unused-talent","title":"8. Unused Talent","text":"<p>Perhaps the most damaging waste of all: failing to use the creativity and insight of the people closest to the work.</p> <p>When teams are reduced to task-takers, innovation dies. The best engineers become disengaged, and the organisation loses its capacity to learn, adapt, and improve.</p> <p>Reducing this waste means treating developers as designers of systems \u2014 trusted to experiment, decide, and continuously shape how value flows to users.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#practical-reduction-strategies_7","title":"Practical Reduction Strategies","text":"<ul> <li>Empower teams with autonomy and ownership over outcomes.</li> <li>Encourage contributions and ideas from all team members.</li> <li>Allocate time for experimentation, learning, and innovation (spikes, hackdays).</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#enabling-methodologies-practices_7","title":"Enabling Methodologies &amp; Practices","text":"<ul> <li>Agile empowers teams to self-organise and decide how to achieve outcomes.</li> <li>Team Topologies encourages autonomy and ownership over clear, bounded scopes.</li> <li>DevOps culture rewards experimentation and learning from failure.</li> <li>Domain-Driven Design and Clean Code both assume developers are active designers of systems, not passive implementers.</li> </ul>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#validated-performance-impact_7","title":"Validated Performance Impact","text":"<p>The Accelerate research identifies culture as a decisive factor in performance, impacting all four DORA metrics. Teams with autonomy, trust, and psychological safety deliver faster (Lead Time, Deployment Frequency), fail less (Change Failure Rate), and recover more quickly (Time to Restore Service) \u2014 proving that empowering people is the most powerful efficiency gain of all.</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2025/10/25/the-eight-wastes-of-modern-software-delivery/#challenge-everything-deliver-only-what-matters","title":"Challenge Everything \u2014 Deliver Only What Matters","text":"<p>The eight wastes aren't just a process checklist \u2014 they're a mindset. They challenge us to constantly ask: \"Is this adding value, or just keeping us busy?\"</p> <p>By spotting and eliminating these wastes, you'll deliver faster, build smarter, and free up creative energy to focus on what truly matters: solving real problems.</p> <p>The Accelerate and DORA studies have shown that Lean's principles of flow, feedback, and empowerment remain the strongest predictors of high-performing teams today.</p> <p>Lean isn't about doing more with less \u2014 it's about doing only what matters.</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Agile","Continuous Delivery","DevOps","DORA","Lean","Platform Engineering","Team Topologies"]},{"location":"blog/2016/10/18/mash-health/","title":"Mash Health","text":"","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/10/18/mash-health/#mash-health","title":"Mash Health","text":"<p>Mash Health is a digital public service that enables users to find UK healthcare providers. It uses the data.gov.uk API to access healthcare information for a variety of service types, including hospitals, GP surgeries, pharmacies, clinics and social care.</p> <p>It allows for easy searching by name, city, county or partial postcode. Results are displayed in a clear list with all relevant contact information and also displayed on an interactive map.</p> <p></p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/10/18/mash-health/#open-data-api","title":"Open Data API","text":"<p>I'm all for government open data on data.gov.uk, it's important that it's published in the public domain for transparency and to encourage re-use and innovation. However, part of the problem is unless you want to download that data, process it, host it, load a database etc, it's not as easily usable for a developer as it is to someone who just wants to view it. The availability of the data on data.gov.uk is high, the ease of re-use is, in my opinion, low.</p> <p>That's why it's great that there is now programatic access to some datasets over a common protocol (HTTP), using standard interfaces (RESTful API) and serving open data in open standard formats (JSON). Many thanks to Ross Jones for his help in answering a few questions for me and taking my feedback on the API so far. I look forward to seeing and using many more data.gov.uk APIs in future!</p> <p></p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/10/18/mash-health/#design-principles","title":"Design Principles","text":"<p>I wanted to see what I could do to present healthcare open data in a useful, engaging and interesting way.</p> <ul> <li>Firstly, I wanted to visualise the data on a map, to see how healthcare locations are geographically distributed, as such it takes up the lions share of the page.</li> <li>Secondly, theres a lot of different contact information for healthcare providers available; it should be easy to identify and use.</li> <li>Thirdly, you should be able to search for different types of healthcare providers in a consistent and structured way, in order to aid the ease of finding what you need.</li> <li>Lastly, it should work well on a mobile device, so the design must be responsive and links to contact details should open appropriate apps (like a phone number).</li> </ul> <p>The last point was a bit tricky with the map, since a slippy map that occupies the width of the screen can give users issues with scrolling past it, so my solution was to remove it and focus on the textual result data. If you're using a tablet in landscape orientation, or a regular desktop resolution, then the added screen estate makes the experience a better one, without inhibiting the mobile device experience.</p> <p></p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/10/18/mash-health/#whats-next","title":"What's next?","text":"<p>This is an ongoing project, driven by user needs and feedback. Here are a few of the ideas I'd like to implement:</p> <ul> <li>Search based on geolocation.</li> <li>Search for all types of healthcare service at once.</li> <li>Identify different healthcare service types with custom map markers</li> <li>Add satellite imagery map base layer</li> <li>Link between clicking on a result in the list and highlighting on the map and vice versa</li> <li>Give it a proper URL on my domain! (I'll do this shortly)</li> </ul> <p></p> <p>I'd really appreciate any feedback on the service so far, including feature requests and bug reports, so please feel free to contact me, or raise an issue on GitHub.</p> <p>In the meantime, please give Mash Health a try and let me know what you think of it.</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/","title":"Mash Petitions","text":"","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#mash-petitions","title":"Mash Petitions","text":"<p>Mash Petitions is a digital public service that enables users to explore UK parliament petitions. It builds upon the governments' e-petitions platform, exposes more detailed information and combines it with other open public data to enable interesting analysis and insight.</p> <p></p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#what-it-isnt","title":"What it isn't","text":"<p>It is not a way to sign or create official government petitions, nor a replacement for any feature of the government e-petitions service at https://petition.parliament.uk/. It is not a government service and makes no attempts to appear as such, it just uses open data from a government service, for which full attribution, licensing and credit is given.</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#why","title":"Why?","text":"<p>Mash Petitions is free, as in free speech, not as in free beer. It is intended for the greater civil and democratic good. It promotes greater transparency of the operations of government and parliament in responding to the requests of its' citizens. It enables citizens to view which members of parliament represent them and the causes they care about in their constituencies. It allows for quick, easy and simple comparison of petitions and their progress through the democratic process. It visualises geographic data so that local issues can be identified and understood.</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#principles","title":"Principles","text":"<p>I set out developing Mash Petitions with a few design principles in mind:</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#more-detailed-information-displayed-clearly-and-simply","title":"More detailed information, displayed clearly and simply","text":"<p>There is a lot more information about the history and demographics of a petition available through the e-petitions API than is displayed on the petitions' web page. I wanted to show this information, but make it clear and simple to understand. I also wanted it to be easier to compare progression towards milestones between petitions by displaying them in a clear tabular format and allow them to be filtered by state and search criteria.</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#visualise-geographical-data-on-a-map","title":"Visualise geographical data on a map","text":"<p>Data about signatories parliamentary constituency is not provided in a geospatial format by e-petitions. Displaying this spatial data visually can show strong correlations between petitions and geographic locations. This can be for many reasons, including proximity to a local cause, a large population of people affected by an issue, socioeconomic status, political alignment, environmental disaster and many more. If a picture paints a thousand words, a map paints a million.</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#responsive-web-design","title":"Responsive web design","text":"<p>This service is about a function of government that serves all of its' citizens. Therefore it should absolutely work on the wide variety of devices of different shapes, sizes and capabilities that citizens use, including smartphones, tablets, laptops, desktops and TV's. I believe that creating responsive web services is a better approach than native apps as the barrier to entry is much lower (any device with a web browser) and the potential reach far higher.</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#make-it-better","title":"Make it better","text":"<p>When I discovered there was an API for e-petitions, my first thoughts were \"I bet I can make something good with that!\". Ultimately that's all it comes down to, I wanted to make something useful and show open public data in an interesting and clear way that benefits citizens and their interactions with government. I thought I could make it better, so I've tried to do that.</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#features","title":"Features","text":"<p>Filter petitions by status:</p> <p></p> <p>Search full text of petitions:</p> <p></p> <p>Make easy comparisons with clear status and progress indicators:</p> <p></p> <p>Interactive maps with fullscreen view:</p> <p></p> <p>View complete history of a petition:</p> <p></p> <p>Signatures by constituency with MP details and link to their TheyWorkForYou profile:</p> <p></p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#open-beta","title":"Open Beta","text":"<p>This is not finished and probably never will be. It's work in progress and driven by user needs. I want to put it out into the hands of the public to see if it works for them and to learn more about their needs. I can then use this feedback in order to iterate and improve it.</p> <p>There might be bugs; if you find one please raise an issue so I can look into it.</p> <p>If you have any feedback please get in touch and let me know. Alternatively, if you're a developer and want to contribute code you can do so on GitHub</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2016/03/05/mash-petitions/#plans","title":"Plans","text":"<p>Because of fair usage restrictions on some open data API's I am using there are some unfortunate limitations of my service. For example, I have had to limit getting MP details and geographical data to the top ten constituencies by signatures. I would like to be able to provide this information for all constituencies in future.</p> <p>I also have more features planned to enable citizens to effectively lobby MP's to represent them and the causes they care about. I will be blogging about new features, fixes and improvements as and when they are live in the service, so keep an eye on my blog for updates.</p> <p>In the meantime, please try using Mash Petitions and let me know what you think of it!</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Bootstrap","Flask","Maps","Open Data","Python"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/","title":"Mash Time Tracker: History retention, tag pages, in-progress duration &amp; improved forms","text":"","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/#mash-time-tracker-history-retention-tag-pages-in-progress-duration-improved-forms","title":"Mash Time Tracker: History retention, tag pages, in-progress duration &amp; improved forms","text":"<p>I'm rolling two releases together into this blog, since I wanted to get these features out sooner. I still think blogging is important way to commutate, but it was starting to become a blocking task, with some features done and ready to release but waiting for an associated blog post to be written. In future I'm taking the approach of releasing features more regularly and blogging about them when it reaches a significant amount of change.</p>","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/#time-entry-history","title":"Time entry history","text":"<p>Up to now, each user had an limit of 120 time entries, enough for 2 entries per day, 5 days a week, for 12 weeks. Once that limit was reached then the oldest entry was deleted upon creating a new one. This means that each frequent user of the service would always have 120 entries stored, even if they then stopped using the service. At the small end of the scale this allows me to stay within low storage capacity limits and keep costs to a minimum. However, as the number of users increases the data capacity requirement increases linearly and therefore might start costing to retain inactive users historical data.</p> <p>To resolve this I've removed the 120 time entry limit and replaced it with a 12 week retention period for all user accounts. This is managed by a scheduled task that runs every night at midnight (UTC) to delete all time entries started over 12 weeks ago. The account page has been updated to show the length, date and amount of history retained to keep users informed. Now, if a user stops using the service their time entry data will slowly be deleted, however their tags and account will always remain. This also gives me the option to explore variable data retention periods based on a subscription model in the future.</p>","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/#redesigned-tag-page-and-stats","title":"Redesigned tag page and stats","text":"<p>The tag page has had an overhaul to highlight some insightful data. Each tag has it's own card showing the total number of tagged time entries and their total duration, along with the date that tag was last used.</p> <p>You can also view all entries for that specific tag (from the last 12 weeks) if you needed to check or review all the times you spent doing a particular activity or working on a project. Tags displayed on time entry cards are now also clickable and link to all the tagged time entries page.</p>","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/#in-progress-time-entry-duration","title":"In-progress time entry duration","text":"<p>Time entries that are in-progress are now highlighted more clearly and the current duration (on last page refresh) is displayed in a header bar. The in-progress duration is now also included in the weekly summary totals and progress bar. So you dont have to wait to hit stop to know how close you are to your target now.</p>","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/#form-improvements","title":"Form improvements","text":"<p>Form element labels, help text and validation error messages have all had some attention to make them clearer, more specific and understandable. A lot of the design thinking was taken straight from the GOV.UK Design System which is an excellent resource for design patterns regardless of the visual framework or target sector.</p>","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/#delete-confirmations","title":"Delete confirmations","text":"<p>Improved delete confirmation pages to let the user know the impact of the action in terms of the number of time entries and tags affected</p>","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2021/02/26/mash-time-tracker-history-retention-tag-pages-in-progress-duration--improved-forms/#and-the-rest","title":"And the rest\u2026","text":"<ul> <li>Redesigned homepage layout and content to better highlights the benefits and selling points of the service.</li> <li>Redesigned page header througout the service to match new homepage.</li> <li>More code moved to common utility functions with more added unit tests for increased confidence in the quality and accuracy of the output.</li> </ul> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Bootstrap","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/","title":"Mash Time Tracker: Native controls, app icons &amp; performance","text":"","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/#mash-time-tracker-native-controls-app-icons-performance","title":"Mash Time Tracker: Native controls, app icons &amp; performance","text":"<p>It's been a long time since the previous release of Mash Time Tracker in August 2019; life, work and free time have been the enemies of side project progress! I've had a number of features \"parked\" for a while, stuck behind other parts I had started working on and not finished. I've decided to unblock them to get incremental improvements out sooner rather than wait for the bigger features to be ready. I'll try and focus on smaller and more frequent releases in future.</p> <p>So here's the latest small, but hopefully still significant release v0.21.0. This one is all about making the web app look and feel even more like a native app installed on your smartphone or desktop OS, which should also bring about some big usability improvements.</p>","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/#device-native-controls","title":"Device native controls","text":"<p>Date and time entry controls have been split out, from a single text input to two inputs using their specific HTML5 input types. This means that on a regular desktop browser you will see that browsers own specific date and time controls. On an Android or iOS device you will see the OS's native controls for selecting dates and times that are familiar to people using those platforms, and much easier to use!</p> <p></p>","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/#custom-form-controls","title":"Custom form controls","text":"<p>In addition to the native controls, other form controls such as radio buttons and check boxes now use custom Bootstrap form styles. There are two main reasons for switching. Firstly, consistency; all browsers and OS's will now display these controls in the same way. Secondly, aesthetics; their look and feel is more in keeping with the rest of the visual design.</p> <p></p>","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/#app-icons","title":"App icons","text":"<p>Thanks to Joe Honywill for this feature request. This will help people to access Mash Time Tracker from the home screen of their mobile device. Along with using native controls, this change makes Mash Time Tracker feel even more like a natively installed app on a mobile device. Correctly sized icons are available for all platforms including iOS, Android, Windows 8/10, MacOS and classic desktop browsers.</p> <p></p>","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/#lighthouse","title":"Lighthouse","text":"<p>I've previously blogged about using Google PageSpeed Insights to help optimise the performance of the service, but because Mash Time Tracker requires an account PageSpeed isn't able to analyse pages behind authentication. That's where Lighthouse comes in; using the tool baked in to Chrome I've been able to delve deeper into the more complex time entry pages and make further performance, accessibility, best practice and SEO improvements.</p> <p></p>","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/#account-page","title":"Account page","text":"<p>Redesigned account information page taking direct inspiration from the GOV.UK Summary List component. Making better use of horizontal screen space when it's available, whilst keeping the mobile view sensible with action links in-line with their content. More readable, less clutter, just better.</p>","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/02/25/mash-time-tracker-native-controls-app-icons--performance/#other-bits-and-pieces","title":"Other bits and pieces","text":"<ul> <li>All textual content pages, such as the help page, are now 2/3 width on larger devices, for more readable line lengths.</li> <li>Form related pages are 1/2 width on larger devices.</li> <li>All required frameworks and libraries have been updated to the latest versions, making sure to keep up with critical security patches.</li> <li>Some behind-the-scenes backend work to prepare for an upcoming feature.</li> </ul> <p>More details to follow in the next release blog!</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Accessibility","Bootstrap","Performance","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/","title":"Mash Time Tracker: Weekly summaries, comments &amp; UI upgrade","text":"","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#mash-time-tracker-weekly-summaries-comments-ui-upgrade","title":"Mash Time Tracker: \u200a\u200aWeekly summaries, comments &amp; UI upgrade","text":"<p>2020 was a difficult year for many people in previously unimaginable ways. 2021 doesn't immediately appear to be an improvement for most people, although there is hope on the horizon, and maybe by this time next year we might be experiencing at least a moderate improvement.</p> <p>If you have been lucky enough to remain in your job and find yourself working from home, this may still not be a welcome situation for you. Balancing the demands of home, family and working life all under the same roof is hard. When I started Mash Time Tracker it was all about making time management easier, quicker and simpler and as we start a new year I still want to do that.</p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#weekly-summary","title":"Weekly summary","text":"<p>I've refined the weekly time progress bar into a new summary component. You can see the total number of entries and time recorded in a given week, as before. But now you also get the total time recorded against each tag used as well. So if you work on multiple projects or activities you can easily see how you've allocated your time. If you also have to enter your time into a corporate time management system, this further helps to simplify the process as you can very quickly see your overall total weekly time and allocation to specific activities in one single and simple place.</p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#comments","title":"Comments","text":"<p>Forgotten what you were doing last Monday? Tag not jogging your memory? Me too! Now you can add a short comment to document more of what you were doing.</p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#new-user-experience","title":"New user experience","text":"<p>The experience a first time user has of the service after signing up was not brilliant, without sufficient explanation of what they can do next other than \"start now\". As the number of features in the service grows it's important that both new and existing users can easily discover and use them, especially if they don't read these blogs.</p> <p>Now users will be prompted to create tags and set their scheduled time if they haven't done so already, or have just created their account. These prompts explain what the feature is for and contain links directly to the appropriate forms to make it as understandable and easy as possible.</p> <p></p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#ui-improvements","title":"UI improvements","text":"<p>The headline change here is the upgrade from Bootstrap 4.5.x to Bootstrap v5 Beta 1. Since this beta release of Bootstrap marks the first stable one without breaking changes or new features to come I wanted to get ahead and upgrade. There are a lot of improvements to note, but I've also used it as an opportunity to re-assess some of my earlier design choices and make sure they still make sense in the new version. These include things like spacing, alert contexts, use of colour for visual feedback, button sizing and layout, responsive design considerations and form validation feedback.</p> <p></p> <p>Bootstrap 5 also has the added bonus of no longer requiring the use of JQuery. Removing JQuery has reduced an average page load down from 546 kB to 464 kB, a 15% reduction. This makes an already very small page size even faster to load, especially on mobile devices and networks. Speed and simplicity are the primary goals of Mash Time Tracker and this change is a welcomed contribution to both.</p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#cicd-pipeline","title":"CI/CD pipeline","text":"<p>I've also done some engineering housekeeping to address technical debt and follow best practices and standards. There was some repeated code that is now a common utility with unit tests to cover all scenarios, ensuring it behaves as expected.</p> <p>I've recently switched from using Travis to GitHub Actions for my CI/CD pipelines and I really like it. Travis has served me well for years, but waiting 20+ minutes for a build to start was no longer acceptable when GitHub offers a comprehensive, and fast alternative. To be completely honest, I have been remiss in not writing any meaningful unit tests until now and I will gradually address that with each subsequent release.</p> <p>My pipeline now checks the app's dependencies are up to date and that there are no known security vulnerabilities associated with any of them. It then performs static code analysis (\"linting\") to ensure that it conforms with Python language style guides. Finally, it run's the unit test suite. This is matrix tested against each currently supported version of Python, should I, or anyone else want to deploy it on a different stack.</p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#next-up","title":"Next up...","text":"<p>Looking back over the wishlists from the last few blogs:</p> <ul> <li> Tagging time entries</li> <li> Tag time targets</li> <li> Ongoing time balance</li> <li> Daily time delta against schedule</li> <li> Weekly summary of tagged time</li> <li> Change entry limit to time period instead of quantity</li> <li> Comment on time entries</li> </ul> <p>I'm going to continue working on the daily time deltas, alongside some more background code improvements and a more comprehensive test suite.</p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2020/12/31/mash-time-tracker-weekly-summaries-comments--ui-upgrade/#thanks","title":"Thanks","text":"<p>Thanks for using Mash Time Tracker in 2020, please send any feedback and raise any bug reports or feature requests you have, it really is appreciated. </p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Bootstrap","CI/CD","Python","Security","UX","WTForms"]},{"location":"blog/2019/08/09/mash-time-tracker-time-tags/","title":"Mash Time Tracker: Time tags","text":"","tags":["Bootstrap","UX"]},{"location":"blog/2019/08/09/mash-time-tracker-time-tags/#mash-time-tracker-time-tags","title":"Mash Time Tracker: Time tags","text":"<p>Since introducing Mash Time Tracker last month there have been two releases to production. The first was a large scale refactoring of the app, to improve the structure of the code and make it easier to add new features in future. The second release is what I want to share today; a new feature!</p> <p>Before that though, I want to highlight some of the ways that using Mash Time Tracker makes recording your time simpler, easier and quicker.</p>","tags":["Bootstrap","UX"]},{"location":"blog/2019/08/09/mash-time-tracker-time-tags/#keep-it-simple","title":"Keep it simple","text":"<p>Using Mash Time Tracker is super easy. I leave the app open in a browser on my phone and as I walk into work each morning I tap the start button. Because it's quick and simple, I remember to do it. No more trying to work out what time I got in, or typing into spreadsheets, or writing notes that I then lose. If for some reason I forget to tap the start button on my phone, then I can also do it from my laptop.</p> <p>And because I tap to start and stop when I arrive and leave I also know that my times are accurate. Mash Time Tracker records time down to fractions of seconds but displays time in a clear and readable format to assure you that they're right.</p> <p></p> <p>If you have to use a corporate time reporting system, such as those from Oracle or SAP, then Mash Time Tracker helps to make this as painless as possible. I used to type in many start and end times in every day using a slow and awkward system. Now by using the quick, simple and intuitive interface of Mash Time Tracker, it's all worked out for me. I copy a single number of decimal hours and that's it, done!</p> <p></p>","tags":["Bootstrap","UX"]},{"location":"blog/2019/08/09/mash-time-tracker-time-tags/#tag-youre-it","title":"Tag, you're it!","text":"<p>As mentioned in my last blog, one of the first features I wanted to add was the ability to categorise time entries. I've implemented this using the concept of tags.</p> <p></p> <p>Tags are short descriptions of some kind of activity; anything that you want to record, measure or track. They could be whole projects or individual tasks at work for example. Tags are optional, new time entries are created without an associated tag. You can edit the entry to tag it afterwards, if you want to.</p> <p></p> <p>Users can create, update and delete up to five unique tags. Tags are personal to each user and not shared between accounts. If you delete a tag it will not delete any associated entries, only remove the link between them.</p> <p>If you need to account for your time spent on various projects then using tags helps you to quickly allocate time to each project.</p>","tags":["Bootstrap","UX"]},{"location":"blog/2019/08/09/mash-time-tracker-time-tags/#whats-next","title":"What's next?","text":"<p>Going back to my original wishlist, the next feature should be to keep a running balance of flexible working time. But I'm not satisfied that I could deliver that whilst still maintaining my core design principle of simplicity. However, I can do a part of that functionality; to calculate a daily credit/debit amount based on a user-defined schedule. This way I can deliver value to users whilst still considering the best way to simplify the remaining part.</p> <p>I hope you find that using tags is another way that Mash Time Tracker helps you to simplify your time management and recording. If you haven't signed up yet please try using Mash Time Tracker for yourself and let me know your feedback, issues or feature requests.</p> <p>Thanks for reading!</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Bootstrap","UX"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/","title":"Mash Time Tracker: Weekly view, time schedules &amp; begining beta","text":"","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#mash-time-tracker-weekly-view-time-schedules-begining-beta","title":"Mash Time Tracker: Weekly view, time schedules &amp; begining beta","text":"<p>One of my favourite stickers on my laptop is Simon Wilson's \"Always be in beta\" design. It serves as a reminder that, generally speaking, services are never finished and that continual gradual improvement is the best approach to take. I'm sure this service will be no different.</p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#its-beta-time","title":"It's beta time","text":"<p>I originally started Mash Time Tracker as a side project to reduce some of the frustration of using a corporate time recording system from one of the big enterprise vendors. Once I'd got to a certain stage I thought; \"this is quite useful, maybe other people would find it useful too?\". So I released it as an open public alpha and have blogged about the iterative releases since then here and here. That was 14 releases and 18 months ago and, to be honest, I've not devoted all that much time to it in the last 9 months. Who knew a global pandemic and adjusting to a new work/family life balance would be so counter-productive to personal side projects?</p> <p>That said, I feel that after 18 months of myself and a small number of other people regularly using it, I'm pretty confident the core MVP-level features are solving basic user needs. Now it's all about refining those, then adding additional features to meet more complex user needs, without undermining the simplicity and speed of the core features. Starting with...</p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#weekly-view","title":"Weekly view","text":"<p>This is now the default view of your time entries, instead of one long paginated list. Time entries are collated by calendar week and displayed in descending date order. The previous pagination controls have been replaced by previous, current and next week navigation, with the current week being the default. This solves the problem of multiple entries from the same day being split across two pages, which resulted in incorrect daily totals on each page.</p> <p>Moreover, I believe this better fits with peoples mental models of their working time. People tend to think in terms of weeks of activity, not a continuum of individual days. I've added a progress indicator to visually indicate to the user whether they have recorded more or less time this week than they were scheduled to, and if so how much (more on that below).</p> <p>This is particularly useful if you also have to record your time elsewhere and want to duplicate only the minimum of effort by just entering a single weekly total, or claiming a weekly time credit/debit.</p> <p></p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#new-time-card-design","title":"New time card design","text":"<p>I thought the previous time card design became too cluttered and didn't make it clear what the users expected interactions were. This iteration is not radically different, containing the same information, but laid out more clearly. Instead, it now ephasises to the user what actions they can take with each time entry, hopefully making it easier to understand.</p> <p>As a result of this, multiple time entries for the same day are no longer grouped together, as I felt the cluster of interactions within a single visual container was too busy. Now, one card relates to one time entry and what you can do with that entry alone. User feedback is, as always, very much welcome and encouraged as this is, along with the weekly view, the biggest visual change since the alpha release 18 months ago.</p> <p></p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#time-schedules","title":"Time schedules","text":"<p>In order to know how much progress has been made through a week, the app needs to know how much time you intend to work on which days. This is usually people's regular contracted working hours, but could be used for anything where you anticipate an amount of time spent each week and want to track progress against that. You can find the option to set your scheduled time in your account settings.</p> <p></p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#more-tags","title":"More tags","text":"<p>You can now create up to eight unique tags, increased from five, to categorise your time entries with, so you can track all the things.</p> <p></p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#start-a-tag-now","title":"Start a tag now","text":"<p>Now you have all of those tags at your disposal you can start a new time entry with one of them immediately using the drop down menu of the main \"Start now\" button. No more having to edit a time entry later to tag it with what you were doing if you already knew that before you started.</p> <p></p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#no-more-modals","title":"No more modals","text":"<p>Inspired by this tweet (and other excellent work by Adam Silver and Amy Hupe), I've removed all modal dialogs used as a safety mechanism before deleting something. Instead these have been replaced with new pages, which dont break users expectation of how the back button works and actually allow more space to make the content a lot clearer.</p> <p></p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#and-the-rest","title":"And the rest","text":"<p>Those are the headline features in this release, but I've been tweaking and tuning a few other quality-of-life related things:</p> <ul> <li>Increased entry limit from 80 to 120, after which the oldest entry is deleted upon creating a new one. Should be enough to allow people to record two entries a day, five days a week, for three months.</li> <li>Open Graph Protocol metadata tags to enable better link sharing on social media.</li> <li>ARIA attributes added to help text within forms, to improve accessibility and assistive technology user experience.</li> <li>Improved email address validation on sign up, log in, password reset, account activation and account update. Now provides more granular error messages if an input email address is invalid. Also checks the deliverability of the email address by resolving the domain name.</li> <li>Consistent actions, headings and confirmation messages.</li> <li>Increased rate limit to allow for more user requests per second before hitting an error page.</li> <li>Fixed bug in validating timestamps stored as UTC and displayed in the users selected timezone when editing an existing time entry.</li> </ul>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2020/11/28/mash-time-tracker-weekly-view-time-schedules--begining-beta/#next-up","title":"Next up...","text":"<ul> <li>Daily time credit / debit against scheduled working hours.</li> <li>Weekly summary of time spent on each tag, to help with recording allocation of time to projects.</li> <li>Remove numerical entry limit in favour of a time based one which automatically removes entries over a certain age. As the number of users increases this will be a better approach to keeping the storage requirements of the app down.</li> <li>Comments on time entries? Let me know!</li> </ul> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Accessibility","Bootstrap","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/","title":"Mash Time Tracker","text":"","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#mash-time-tracker","title":"Mash Time Tracker","text":"<p>One of my first jobs in software development after leaving university was to rewrite a corporate time management system. So it seems ironic that after 12 years of experience I find myself coming right back to where I started.</p> <p>I definitely committed some software sins on that project. Especially by pushing complexity and required knowledge on to the user, forcing them to figure it out for themselves instead of doing the hard work to make it simple.</p> <p>In the years since I've always had the kind of job that requires me to keep track of my time for flexible working hours. I've had to live with my previous mistakes, and have also had far worse user experiences in systems from the usual big enterprise vendors.</p> <p>When you walk through an office and see the same spreadsheet on so many people's screens, because they prefer to use that over the system they're otherwise forced to use, you know something has gone wrong. It's that observation, and the desire to find a simple solution to the problem that has led me to create \"Mash Time Tracker\".</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#simple","title":"Simple","text":"<p>A lot of corporate and internal facing interfaces end up like the third example above. People believe that the complexities of their particular organisation are irreducible and can't be distilled into something simple.</p> <p>It's also regrettable that we put so much time and effort into making user centred products and services for external customers, then totally forget that internal users are customers too. Back-office administrative systems aren't as sexy, but people use them all day every day and deserve better.</p> <p>Simplicity does not mean basic. Case in point; the single search field in Google Maps which takes free-format unstructured terms and manages to turn that into a structured address for (nearly) anywhere in the world. The simplicity of the solution hides a world of complexity from the user but does not mean the solution itself is basic.</p> <p>Twelve Principles of Agile Software</p> <p>Simplicity--the art of maximizing the amount of work not done--is essential.</p> <p>https://agilemanifesto.org/principles.html</p> <p>The most simple way I could think of to record time spent doing something was a stopwatch. Press a button to start it, press it again to stop, see how long that was. It does one thing and it does it well. As that's all I want the app to do, that's all I've focused on for the MVP (alpha) release, to refine the core functionality.</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#quick","title":"Quick","text":"<p>I've focused on making the app and the UI as small and fast possible. All responses are gzipped, to minimise data transfer, which is particularly important on mobile networks, but benefits everyone. All assets come from large CDNs, so there's a good chance you already have a copy in your browser cache. If you don't, then they're all minified so take up as little space as possible, helping to keep page load time down.</p> <p>I've implemented reasonable rate limits, to help protect the application from abuse and maintain a good service for all users. This is backed by Redis, a super-fast in-memory cache. You should never notice it doing its job, but I will continue to monitor this and adjust if needed.</p> <p>The result of this careful effort is a Google PageSpeed score of 100% on desktop and 99% on mobile!</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#secure","title":"Secure","text":"<p>But what good is speed at the expense of security?</p> <p>I'm using an extension called Talisman to handle setting HTTP headers. This can help protect against a few common web application security issues, including:</p> <ul> <li>Force all connects to HTTPS.</li> <li>Enable HTTP Strict Transport Security (HSTS) to protect against session hijacking.</li> <li>A strict Content Security Policy (CSP) with only specific resource types allowed. This prevents cross-site scripting (XSS), clickjacking and other code injection attacks.</li> </ul> <p>This has gained the service an A+ rating on securityheaders.com, but there's far more to web security than headers alone:</p> <ul> <li>Protected against SQL injection attacks thanks to SQLAlchemy's object-relational mapping (ORM) generating parameterised SQL.</li> <li>All forms are protected against cross-site request forgery (CSRF) attacks by using CSRF tokens in WTForms.</li> <li>All external resources use subresource integrity (SRI) checks, ensuring assets have not been compromised.</li> <li>User passwords are encrypted using bcrypt, a slow key derivation function. It is resistant to rainbow table, dictionary attacks and brute force attacks.</li> <li>User account emails contain a unique, time-limited URL. This uses JSON Web Tokens (JWT) that are digitally signed using HMAC with SHA-256. Activation and confirmation tokens expire in one hour, and password reset tokens expire in ten minutes.</li> </ul>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#web-first","title":"Web first","text":"<p>\"You should create an app for that!\" said my wife when I was telling her about this idea. It's a fair assumption in today's smartphone-driven digital world, but not one I subscribe to. For something as lightweight as this that doesn't need an OS native app, it's a big overhead for a developer. It's more complex to write and slower to deploy/release. The user has to find the app on a marketplace, install it and take up valuable storage space otherwise used for photos of their kids/cats/lunch.</p> <p>I've taken a mobile-first approach to the design of Mash Time Tracker, so it looks great and works well on all sizes of device. But more importantly, I've adopted a web-first approach that treats the browser as a first-class citizen and not a fallback option. That's any browser on pretty much any device by the way, not just Android or iOS.</p> <p>The web is open, democratic and free (as in speech, not beer), in a way that app stores tend not to be.</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#open","title":"Open","text":"<p>I store the least amount of data possible, not only to limit my own storage needs and liabilities, but because it's the right thing to do. It may help to know the users first and last name for personalisation, but the app does not need it, so I don't ask. The only personally identifiable information held is an email address. All data is stored in the EU too, to enjoy better data privacy and protection legislation.</p> <p>The email address the user provides is only used for transactional emails initiated by the user, and never for marketing purposes, so I believe this is GDPR compliant. The user creates a legitimate interest in receiving transactional emails when they create an account. This is my interpretation of GDPR around transactional emails without explicit consent, but I'd be happy to take some advice on this from an expert!</p> <p>If you decide you don't like the service or don't want your data held in it anymore, that's fine, you are in full control of your data. You can delete your account at any time, which includes all your time entries, in one action. No soft-deletes or archiving here, deleted means deleted.</p> <p>You don't have to take my word for it either, you can see the full source code for the application on GitHub. If you don't want the technical details then there's a human-readable changelog with all notable changes in every release. It's licenced under the MIT licence too, so you can run your own instance and make improvements. Issues and pull requests are always very much appreciated!</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#alpha","title":"Alpha","text":"<p>Today I have released the first public alpha version of Mash Time Tracker. As with all pre-release software, this is one for early adopters who want to help test the service in the real world and shape the direction of its development. As such, your feedback on the service is incredibly important, to help me understand what works well, what doesn't and where to focus my effort. Whilst I am confident there aren't any major bugs or issues, these things come out in the wash, so please be aware.</p> <p>These are the features currently in the service:</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#accounts","title":"Accounts","text":"<p>Sign up for an account. Confirm email address. Log in and out. Change email address and password. Delete account.</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#time-entries","title":"Time entries","text":"<p>Create an automatic time entry. Edit and delete time entries. Create a manual time entry. Page through previous entries (10 per page). Create up to 80 entries, after which the oldest entry is deleted when a new one is created.</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#next-steps","title":"Next steps","text":"<p>I'm going to continue iterating on this project to further refine it. I'll also be adding more features in response to user needs and feedback over time. But, I'm very aware that feature creep can start to undermine the original simplicity of a product. Some features that I am confident I can introduce without losing too much of that simplicity are:</p> <ul> <li>Tagging \u2014 maintain a set of tags to organise and categorise your time entries.</li> <li>Tag targets \u2014 Associate an amount of time with a particular tag and track progress towards this target.</li> </ul> <p>Some problems that are going to need more thought to simplify, but are worth doing:</p> <ul> <li>Time balance \u2014 for people who work flexible hours and have a credit/debit system and want to track their current balance.</li> </ul>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2019/07/12/mash-time-tracker/#thanks","title":"Thanks","text":"<p>Please sign up for Mash Time Tracker, try using it in your day-to-day life and raise any bug reports or feature requests you have.</p> <p>Thanks for reading!</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Bootstrap","Flask","Performance","PostgreSQL","Python","Redis","Security","SQLAlchemy","UX","WTForms"]},{"location":"blog/2018/09/08/mind-over-matter/","title":"Mind over matter","text":"","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#mind-over-matter","title":"Mind over matter","text":"<p>I decided to do something about my weight and perceived body image. But it wasn't really about that. This is how I learned to stop worrying and love to run.</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#physical-health","title":"Physical Health","text":"<p>I've never been a particularly sporty person. At school I enjoyed racquet sports like tennis, badminton and squash, but that was offset by a hatred of being forced to play football and rugby. I particularly hated doing cross country running on, seemingly, only the very worst days of the British winter. The only kind of regular exercise I've done for the last 5 years or so is drumming in rock bands, which is surprisingly more aerobic than you might think, but still not exactly intensive.</p> <p>In February 2018 I set myself a reasonable initial target; lose 1 stone (~6.4 kg) with no particular time frame in mind, just at a sustainable rate. I had no immediate desires to get fitter, stronger or healthier, I just wanted to weigh less and feel better about my body image. My starting weight was 87 kg, the most I think I've ever weighed. The previous month I had finally given in and bought bigger jeans, or \"fat pants\" as I called them, that actually fit me properly. Something had to change.</p> <p>I started walking more; by walking to work during the week and each weekend doing a longer 5 km or 6 km walk. The more I did it the more I thought; \"I really could run some of this route if I tried\". So I bought myself some new running trainers and sought the advice of my friends and colleagues who are into \"that fitness stuff\", as I jokingly referred to it.</p> <p>That's how I discovered the Couch to 5K running plan. I wont go through the details of how the plan is structured, but suffice to say it even managed to get a disillusioned and reluctant runner like myself to actually love running. That very first run was a real eye opener; eight intervals of one minute runs that showed just how unfit I was. It was tough, but rather than be put off, I used it as a baseline to improve upon. Some runs were harder than others (not only when the intervals got longer), but slowly and surely my stamina improved, my heart rate went down and my recovery time got shorter.</p> <p>I stuck with it, through wind, rain, snow and injuries. A particular low point was tripping over and ending up in A&amp;E for 6 hours with a black eye and suspected fractured hand. But even when I really didn't feel like going out running after a hard day at work I knew I would always feel much better afterwards and that kept me doing it.</p> <p>During the Couch to 5K plan I:</p> <ul> <li>Covered a total distance of 110.3 km \u2014 That's roughly the same as London to Dover.</li> <li>Spent a total of 13 hours exercising\u200a\u2014\u200aThat's the same time as flying from London to Singapore.</li> <li>Climbed a total of 1,511 m \u2014 That's 12.4% higher than Ben Nevis.</li> <li>Burned a total of 11,310 calories \u2014 That's 22.3 McDonalds Big Mac burgers.</li> </ul> <p>The benefits to my physical health have been huge. As of the time of publishing this:</p> <ul> <li>I've lost a total of 15 kg (~2 st 5 lb) since February 2018. 4.6 kg(~10.1 lb) of that was during the Couch to 5K plan.</li> <li>My BMI was 30.1 (Obese) and is now 24.9 (Healthy).</li> <li>I've reduced my body fat by 11%.</li> <li>My resting heart rate was around 65 bpm before I started regular aerobic and cardio exercise, now it's around 48 bpm.</li> <li>My VO2 Max estimate was 40\u201344, now it's 51\u201355, going from \"average\" for men my age, to \"very good\" by Fitbit's calculations.</li> <li>My \"fat pants\" now only stay on thanks to a belt, otherwise they will literally drop off me. I'm not sure exactly how many inches I've lost from my waistline since I never measured it, but I'd guess about 4. I'm also wearing shirts from years ago that I liked too much to throw away.</li> </ul> <p>If you're reading this and considering starting running, I honestly cannot recommend Couch to 5K highly enough, and I never thought I'd be saying that. Back in February I wouldn't have taken that advice, so if you're reading this and feeling dismissive, sceptical or apprehensive, I understand, I was too, but I was wrong. Here's how I realised...</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#mental-health","title":"Mental Health","text":"<p>Everyone loves a feel-good weight loss / fitness story and I am very pleased with my progress and proud of what I've achieved. But that is less than half of this story. Here's the hardest part for me; to be open and honest about this, as it's not something many people, even those close to me, really know about, but talking about it is cathartic so here goes...</p> <p>\"Hi, my name is Matt and I have mental health problems. Specifically, Clinical Depression and Generalised Anxiety Disorder with a tendency towards Impostor Syndrome.\"</p> <p>I have a long history with these issues, mostly over a decade ago, which included periods of depression and anxiety that at times made simply being myself something that I abhorred. I felt worthless and useless, because that's how I viewed myself, so that's what I told myself I was. It was a self-fulfilling vicious circle and it prevented me from living my life.</p> <p>I was on various antidepressants, sought counselling and therapy several times, read some self help books and after a long and difficult time I learned how to cope with it. But you don't \"get better\". It's not like a common cold, it doesn't just go away eventually, you learn how to live with it. Although I'm pleased to say that most of the last decade has been relapse free.</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#admission","title":"Admission","text":"<p>That is, until a couple of years ago. The birth of my daughter was the single most amazing experience of my life. She is my absolute world, I love her more than I thought it possible to love anything and she brings me so much joy and happiness. Becoming a father is a life changing event, that goes without saying, but it is also one of the most mentally challenging, emotionally charged and physically demanding times of your life. Guess what? Men can suffer postnatal depression too. Seriously. Yes, really.</p> <p>In addition, I had recently gained a promotion at work into a role that I had aspired to for many years. A role that carries a lot of technical responsibility with many people looking to me for answers, leadership and guidance. I was working on a high profile project that received a lot of scrutiny and criticism. I was giving it my all, so it was hard not to take things personally. It was a difficult and pressured working environment for quite a long time and whilst I had the support of a brilliant team around me, it took its toll.</p> <p>It took a long time for me to accept that something was wrong, despite being more aware of the symptoms given my history with them, I just couldn't see it. \"I'm just tired\", \"I'm stressed at work\", \"Having a child isn't easy, every parent must feel this way\" are the kind of things I would say to myself to justify my emotions. It wasn't until I saw the impact it was having on my wife, our relationship and my relationship with my daughter that I started to accept that I needed help. My wife was my saviour really, if she hadn't helped me see what was happening I don't think I'd have been able to even want to change.</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#acceptance","title":"Acceptance","text":"<p>I went to see my GP, who was really helpful and supportive and referred me to the local mental health service; who were terrible. To be fair, they are massively under-funded and under-resourced and there aren't many alternatives in the area, but the support I received was awful and I wouldn't recommend anyone go there in a time of crisis.</p> <p>The only benefit I found from this experience was that having gone through their standard assessments, I could fairly confidently say that I have moderate clinical depression and severe clinical anxiety. That sounds negative, but having a more precise diagnosis and a label to put on it was oddly reassuring. It really was a thing. I felt like I could own it now, then start to accept and change it.</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#change","title":"Change","text":"<p>You have to want to change. You can't just go to a counsellor, sit there and chat for an hour a week and expect to \"get better\". They can't cure you and they can't fix you. You have to do it for yourself. They are a key person though, and the relationship you form with them is very important. I was very lucky to find an excellent counsellor privately who was open to taking a different approach to the CBT model, since my previous experiences with it weren't that effective.</p> <p>I've been seeing my counsellor Sarah for about 6 months and it has helped me tremendously, far more than any of my previous experiences of CBT. I've re-learnt various coping mechanisms and strategies, including;</p> <ul> <li>To take a step back and acknowledge how a situation makes me feel and take a more measured approach.</li> <li>Stop apologising for everything, especially things that aren't my fault or that I couldn't have changed.</li> <li>Take compliments when given, rather than immediately downplay any accomplishment or redirect to someone else.</li> <li>My feelings do actually matter and that it's not selfish to occasionally put my own needs first.</li> <li>Not to feel horribly guilty about doing something that only benefits me and no one else.</li> <li>I don't own other people's emotions and I don't have to fix things that upset them, I can't change how they feel.</li> </ul>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#recovery","title":"Recovery","text":"<p>I was experiencing very similar mental barriers in my counselling sessions as I was when out running. 90% of my physical health targets were about having the mental strength to keep going further and faster. Both required me to find the confidence to believe I could do it, then go and actually do it.</p> <p>It was all about micro-achievements for me; the reward payoff for consistently achieving ever increasing but attainable targets was a massive boost to my mental health. In much the same way as video games can help people with anxiety through inbuilt reward systems, apps like Fitbit and Strava were providing the continual gradual improvement and rewards I needed to keep me motivated.</p> <p>Running changed from something I was doing to get fit to something I was doing for my own headspace, purely for me, and I didn't feel guilty about doing it. Getting fitter changed from \"I'm so fat, my jeans don't fit anymore\" to feeling confident enough to take a compliment about my appearance without questioning their motives. Losing weight was less about the number and more about setting a target, sticking to it and achieving it.</p> <p>Research shows that regular aerobic exercise is as effective as antidepressants. I'd had some pretty unpleasant side effects from the latest type of antidepressant I was taking, but I was feeling the benefits of the counselling and increased exercise, so I decided to stop taking them. I do not recommend you do this, you should of course go back to your GP and review with them before reducing or stopping any medication. That said, once the side effects had passed I felt a lot better knowing I wasn't dependent on them.</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#so-what","title":"So what?","text":"<p>This isn't the end, this is the start. It's a lifestyle change, both physically and mentally, that I aim to sustain. I'm never going to have a body like Tom Hardy, or be as confident as <code>&lt;insert celebrity here&gt;</code>, but that's fine. They aren't me. This is me.</p> <p>Please don't treat me differently; if you're someone that I know personally and have just read this, remember that I'm still the same person you knew yesterday. Now that you're aware of it though you might understand why some days I seem to struggle more than others with tasks or situations that don't usually phase me. If I'm having a hard time, ask if I'm ok, don't try and fix it, you can't. If you're wondering what's up, ask me how I am, don't just ask how my anxiety or depression is, they don't define me. You can of course ask about that too if you like, I'm happy to talk about it, don't be afraid of it. The only stigmas around mental health are the ones other people place on it.</p> <p>Just writing this blog has been a cathartic exercise for me, but the reason for publishing it is about sharing my experiences with others for their benefit. This is not \"look at me and all that I have achieved, you can do it too!\", but if anything I've said resonates with you then please consider it as a possible option to try at least. Your mileage may vary.</p> <p>It is still massively important to talk more openly about mental health issues, something I have, until this point, not been very good at. So I wanted to contribute towards the movement to normalise the topic. As a society we need to recognise the equality between physical and mental health far better. If you broke your leg, you'd go to hospital. Why should it be any different for mental health problems? If you're emotionally or psychologically hurt or broken, you need to seek the appropriate help, support, advice or treatment.</p> <p>I know that I will always live with these issues, but I have learned how to cope with the hard times and to better appreciate the good times. Talking openly with friends, family, colleagues, professionals and even strangers has helped me accept that there is support and understanding out there. The more we talk about it, the easier it gets.</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2018/09/08/mind-over-matter/#now-what","title":"Now what?","text":"<p>To keep me motivated with a new goal after I finished Couch to 5K, I signed up to run the Plymouth 10K in October 2018. I also wanted to do it for something greater, for other people who may be experiencing similar issues, as well as for myself. So I contacted the mental health charity Mind about representing them and raising money and awareness of mental health issues and the valuable work they do.</p> <p>Everyone has a mental health, either good or bad it still needs attending to. One in four of us every year will need support with theirs. That's why the work that Mind and other mental health charities do is so vital to helping so many people. Please watch this video to understand more about what Mind do and why it is so important:</p> <p>If you have read this far and want to do something to help, then please consider donating to my charity fundraiser on JustGiving to support Mind. You'll be supporting me tremendously too; just knowing that I'm running for something so worthwhile to so many, and with the generous support of people who have read this, will absolutely give me the extra mental stamina to push harder.</p> <p>Thank you to the people who have enabled me to write this. Thank you to my wife, family and friends. Thank you to anyone who gave me advice, support and encouragement along the way. And thank you for reading.</p> <p>#KeepGoing</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Fitness","Mental Health","Running","Weight Loss"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/","title":"Building a static site with MkDocs, NGINX and Docker","text":"","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#building-a-static-site-with-mkdocs-nginx-and-docker","title":"Building a static site with MkDocs, NGINX and Docker","text":"<p>A guide to building a highly customisable, lightweight, secure, and performant static site using MkDocs, NGINX and Docker.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#prerequisites","title":"Prerequisites","text":"<p>You will need Python and Docker installed on your system before starting. I recommend using a version manager such as pyenv to install Python.</p> <p>Tip</p> <p>If you run <code>pyenv local 3.13</code> it will create a <code>.python-version</code> file which pyenv reads to determine which Python version to use.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#setup","title":"Setup","text":"<p>First, lets install Material for MkDocs, the popular and widely used MkDocs theme that adds a lot of features and extensions on top of MkDocs itself:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>I can now create the new site using:</p> <pre><code>mkdocs new mysite\ncd mysite\n</code></pre> <p>I prefer to manage my Python dependencies using a <code>requirements.in</code> file which defines the top-level dependencies that my project directly relies upon. I'm going to create a very basic site for this example, but you can build and expand on it from there.</p> requirements.in<pre><code>mkdocs-material==9.5.43\nmkdocs-minify-plugin==0.8.0\n</code></pre> <p>From there I use pip-tools to compile the <code>.in</code> file and generate the familiar <code>requirements.txt</code> file, using this command:</p> <pre><code>pip-compile requirements.in --upgrade\n</code></pre> <p>Now I'm ready to install the requirements:</p> <pre><code>pip install -r requirements.txt\n</code></pre>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#configuring-mkdocs","title":"Configuring MkDocs","text":"<p>Material for MkDocs is highly customisable, with a lot of extensions and plugins available. I recommend starting with a configuration such as this and working from there:</p> mkdocs.yml<pre><code>site_name: My site\nsite_url: https://mydomain.org/mysite\n\nvalidation:\n  absolute_links: warn\n  anchors: warn\n  omitted_files: warn\n  unrecognized_links: warn\n\ntheme:\n  name: material\n  features:\n    - navigation.footer\n    - navigation.indexes\n    - navigation.sections\n    - navigation.top\n    - search.highlight\n    - search.share\n    - search.suggest\n  palette:\n    # Palette toggle for automatic mode\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to system preference\n\nplugins:\n  - minify:\n      minify_html: true\n      htmlmin_opts:\n        remove_comments: true\n  - privacy\n  - search\n</code></pre> <p>This config sets up a site with automatic dark and light mode support, search suggestions, some basic navigation and minification support.</p> <p>You can test the setup so far is working by serving the site locally using:</p> <pre><code>mkdocs serve\n</code></pre> <p>Then in your browser, open http://localhost:8000/mysite/ </p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#docker-setup","title":"Docker setup","text":"<p>Now I have a basic site created and working locally, let's get it working inside a Docker container. I'll start by creating a new <code>Dockerfile</code> with a simple example:</p> Dockerfile<pre><code>FROM python:3.13-alpine\n\nCOPY requirements.txt ./\nRUN pip install -r requirements.txt\n\nCOPY mkdocs.yml ./\nCOPY docs docs\n\nCMD [ \"mkdocs\", \"serve\", \"--dev-addr=0.0.0.0:8000\" ]\n</code></pre> <p>I'm using the <code>3.13-alpine</code> tag of the official Python image. Using the alpine image variant keeps the image size down to a minimum, and reduces the number of potential security vulnerabilities in packages that I may not actually need. For comparison:</p> Tag Size Packages Vulnerabilities 3.13 1.02GB 575 124 3.13-slim 121MB 144 25 3.13-alpine 44.6MB 41 1 <p>Then I copy the <code>requirements.txt</code> file into the root of the image filesystem and run <code>pip</code> to install them. Next, the <code>mkdocs.yml</code> file and the <code>/docs</code> directory are also copied. The ordering of these commands is important, to take advantage of layer caching and keep build times as fast as possible. The requirements and config are going to change less frequently than the site content. Files that change more often are further down in the file (and therefore layers), such that they invalidate the cache of fewer layers below them.</p> <p>Finally, the <code>mkdocs serve</code> command is executed in the container, to serve the site on the nonroutable <code>0.0.0.0</code> address (\"This host on this network\", inside the container) and port 8000. To build the new image, run:</p> <pre><code>docker build . -t mysite\n</code></pre> <p>And to run it, mapping port 8000 in the container, to port 8000 on the host:</p> <pre><code>docker run -p 8000:8000 mysite\n</code></pre> <p>Going back to http://localhost:8000/mysite/ in your browser still works exactly the same as before, but now it's hitting the running Docker container instead. This also means that you (or anyone else) only need Docker installed on the host system, not Python, or the specific set of package requirements, making it more portable and isolated.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#multi-stage-builds","title":"Multi-stage builds","text":"<p>I want to use NGINX to serve the static site content, but it's currently being served by MkDocs inside a Python image based container. All I really need is the generated content from the <code>/site</code> directory, as the Python runtime is only needed to build the content. To achieve that I'm going to use a multi-stage build to copy the <code>/site</code> directory into a NGINX container, leaving everything else behind. This also has the benefit of keeping the final image as small as possible.</p> Dockerfile<pre><code># Build stage\nFROM python:3.13-alpine AS builder\n\nCOPY requirements.txt ./\nRUN pip install -r requirements.txt\n\nCOPY mkdocs.yml ./\nCOPY docs docs\n\nRUN mkdocs build --strict\n\n# Final stage\nFROM nginx:stable-alpine\n\nCOPY --from=builder /site /site\n</code></pre> <p>I've named the first stage <code>builder</code>, which is the name used to copy files from further down. The <code>CMD</code> has been replaced with <code>RUN mkdocs build --strict</code> to build the site content and abort on any warnings. The second <code>FROM</code> instruction brings in our final NGINX image, using the <code>stable-alpine</code> tag (keeping things lean again). The final <code>COPY</code> instruction copies the <code>/site</code> directory from the <code>builder</code> stage into the <code>/site</code> directory of the current stage, leaving everything else from the build stage behind. The result of this multi-stage build approach is a large size reduction:</p> Build Size Single-stage 160MB Multi-stage 45.7MB","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#configuring-nginx","title":"Configuring NGINX","text":"<p>Did you know that security misconfiguration is number 5 in the OWASP Top 10 security vulnerabilities? Luckily for us, Mozilla has a fantastic configuration generator for most popular web servers, application servers and even databases. I've used this to generate a modern and secure configuration that uses HTTPS and TLS 1.3 cipher suites.</p> nginx.conf<pre><code># generated 2024-11-01, Mozilla Guideline v5.7, nginx 1.26.2, OpenSSL 3.3.2, modern configuration, no OCSP\n# https://ssl-config.mozilla.org/#server=nginx&amp;version=1.26.2&amp;config=modern&amp;openssl=3.3.2&amp;ocsp=false&amp;guideline=5.7\nserver {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n\n    location / {\n        return 301 https://$host$request_uri;\n    }\n}\n\nserver {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n    http2 on;\n\n    ssl_certificate /etc/nginx/ssl/req.pem;\n    ssl_certificate_key /etc/nginx/ssl/key.pem;\n    ssl_session_timeout 1d;\n    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions\n\n    # modern configuration\n    ssl_protocols TLSv1.3;\n    ssl_prefer_server_ciphers off;\n\n    # HSTS (ngx_http_headers_module is required) (63072000 seconds)\n    add_header Strict-Transport-Security \"max-age=63072000\" always;\n\n    # static file location\n    root /site;\n}\n</code></pre> <p>This configuration redirects all HTTP traffic on port 80 to HTTPS on port 443. I've changed the location of the SSL certificate and key on lines 17 and 18 to the directory I'm going to put them in. I've also set the <code>root</code> directive to tell NGINX where the static content is (and where to look for an <code>index.html</code> file). I just need to generate an SSL certificate before I can start to use this configuration:</p> Dockerfile<pre><code># Final stage\nFROM nginx:stable-alpine\n\nRUN apk update &amp;&amp; apk add --no-cache openssl &amp;&amp; \\\n    mkdir /etc/nginx/ssl &amp;&amp; \\\n    openssl req -x509 -noenc -newkey rsa:2048 -keyout /etc/nginx/ssl/key.pem -out /etc/nginx/ssl/req.pem -days 90 -subj \"/C=GB/ST=Devon/L=Plymouth/O=Mash Software/CN=localhost\"\n\nCOPY nginx.conf /etc/nginx/conf.d\nCOPY --from=builder /site /site\n</code></pre> <p>Because I'm using the alpine image variant, the <code>openssl</code> package is not installed by default, so I've installed it, created the directory for the output, and used OpenSSL to create a new self-signed X.509 certificate. Finally, I've copied the <code>nginx.conf</code> file into the default directory NGINX looks for configuration files. Now I can rebuild the image:</p> <pre><code>docker build . -t mysite\n</code></pre> <p>And run it again, but now mapping port 443 (HTTPS) in the container, to port 443 on the host:</p> <pre><code>docker run -p 443:443 mysite\n</code></pre> <p>Now when I open https://localhost in my browser (and accept the self-signed certificate warning) I'm getting the static content served securely by NGINX. </p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#security","title":"Security","text":"<p>There are a multitude of HTTP security response headers that can be set server-side to mitigate against many common attacks and security vulnerabilities. OWASP have compiled an excellent cheat sheet to help understand what each of these do and the protection they afford. I've added what I consider to be the most appropriate ones to the <code>nginx.conf</code> file:</p> nginx.conf<pre><code>    # modern configuration\n    ssl_protocols TLSv1.3;\n    ssl_prefer_server_ciphers off;\n\n    # security headers\n    add_header Content-Security-Policy \"script-src 'self' 'unsafe-inline'; object-src 'none'; base-uri 'none'; frame-ancestors 'none';\" always;\n    add_header Cross-Origin-Embedder-Policy \"require-corp\" always;\n    add_header Cross-Origin-Opener-Policy \"same-origin\" always;\n    add_header Cross-Origin-Resource-Policy \"same-origin\" always;\n    add_header Permissions-Policy \"accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=()\" always;\n    add_header Referrer-Policy \"strict-origin-when-cross-origin\" always;\n    add_header Strict-Transport-Security \"max-age=63072000; includeSubDomains; preload\" always;\n    add_header X-Content-Type-Options \"nosniff\" always;\n\n    # static file location\n    root /site;\n}\n</code></pre> <p>To call out just a few:</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#content-security-policy","title":"Content Security Policy","text":"<p>Mozilla Developer Network</p> <p>CSP is a feature that helps to prevent or minimize the risk of certain types of security threats. It consists of a series of instructions from a website to a browser, which instruct the browser to place restrictions on the things that the code comprising the site is allowed to do.</p> <p>https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP</p> <p>Ideally, a strict CSP would include the hashes of any inline scripts. However, MkDocs Material uses many inline scripts which makes this approach impractical, so for the purposes of a static content site, allowing <code>unsafe-inline</code> is a pragmatic compromise.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#permissions-policy","title":"Permissions Policy","text":"<p>Mozilla Developer Network</p> <p>The HTTP Permissions-Policy header provides a mechanism to allow and deny the use of browser features.</p> <p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy</p> <p>I've used the policy generator at https://www.permissionspolicy.com/ to disable all of the standardised features.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#strict-transport-security","title":"Strict-Transport-Security","text":"<p>Mozilla Developer Network</p> <p>HSTS informs browsers that the site should only be accessed using HTTPS, and that any future attempts to access it using HTTP should automatically be converted to HTTPS.</p> <p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security</p> <p>This header is a default part of Mozilla's modern configuration but is important to note because just redirecting HTTP to HTTPS alone is still vulnerable to a man-in-the-middle attack. The <code>max-age</code> is set to 2 years in seconds.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#optimisation","title":"Optimisation","text":"<p>There are some key enhancements to optimise the performance of NGINX, particularly when being used to serve static files such as this:</p> nginx.conf<pre><code>    # static file location\n    root /site;\n\n    # optimise performance\n    sendfile on;\n    tcp_nopush on;\n\n    # gzip compression\n    gzip on;\n    gzip_comp_level 6;\n    gzip_types application/javascript application/json application/xml font/otf font/ttf font/woff font/woff2 image/gif image/jpeg image/png image/svg+xml image/webp text/css text/csv text/javascript text/xml;\n\n    # caching\n    location /assets {\n        # set long lived cache\n        add_header Cache-Control \"max-age=31536000, immutable\" always;\n    }\n}\n</code></pre> <p>Enabling <code>sendfile</code> and <code>tcp_nopush</code> are relatively minor configuration changes, but bigger gains come from compression and caching:</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#compression","title":"Compression","text":"<p>Compressing responses using <code>gzip</code> can considerably reduce the size of data transmitted but comes at the cost of increased processing overhead. In the configuration above I've told NGINX to compress all the common content types you'll find in most web applications. Adjusting the compression level and observing the results can help to find the optimal setting:</p> Level HTML (kB) CSS (kB) JS (kB) Total (kB) Compression 0 (Off) 13.2 171 109 380 0% 1 4.8 35.2 39.9 166 43.7% 2 4.7 33.4 38.5 163 42.9% 3 4.7 32.3 37.8 161 42.4% 4 4.4 29.8 35.3 156 41.0% 5 4.4 28.4 34.2 153 40.3% 6 4.4 27.8 33.9 152 40.0% 7 4.4 27.7 33.8 152 40.0% 8 4.4 27.6 33.8 152 40.0% 9 4.4 27.6 33.8 152 40.0% <p>You can see that after compression level 6 there is no appreciable reduction in file sizes, so I'm going with that.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#caching","title":"Caching","text":"<p>What's better than transferring an optimised, minified, and compressed file to the client? Not transferring one at all!</p> <p>The generated output <code>/site/assets</code> directory contains all the bundled JavaScript and CSS with cache-busting hashes appended to their file names. This means that when the content of the file changes, so does the hash of the file, therefore so does its path. Since a different file would be requested when it changes, I can instruct browsers to cache these files for a long time.</p> <p>In the NGINX config above I've added a location directive to add the Cache-Control header to any file requested from <code>/assets</code>. Browsers will keep these files in their cache for up to one year before requesting it again. For the example site, this equates to only 7.6 kB of 152 kB to be transferred for each page requested after the initial request, with everything else cached.</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2024/11/04/building-a-static-site-with-mkdocs-nginx-and-docker/#conclusion","title":"Conclusion","text":"<p>Material for MkDocs is a great choice for creating static sites, blogs, and project documentation. It's simple to set up and configure, highly customisable and extensible, plus authoring the content in markdown is easy and familiar to most developers. By using NGINX you can serve the MkDocs generated static site in a secure and highly performant way. Using Docker to build portable, isolated, and small containers makes development and deployment much easier as well.</p> <p>If you want to build your own site in this way, I have created a template repository on GitHub which includes everything discussed above so you can get started quicker.</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["Docker","MkDocs","NGINX","Performance","Python","Security"]},{"location":"blog/2016/02/23/rapid-prototype-versioning/","title":"Rapid prototype versioning","text":"","tags":["GOV.UK","JavaScript","Node.js","Prototype"]},{"location":"blog/2016/02/23/rapid-prototype-versioning/#rapid-prototype-versioning","title":"Rapid prototype versioning","text":"<p>As a part of my day job I create prototypes for services on GOV.UK. We use these as one of the ways to research and learn more about the needs users have of government. It's a very effective and fast paced way to get a lot of vital feedback throughout the service lifecycle and use it to iterate quickly and frequently.</p> <p>Creating new versions of prototypes whilst preserving your previous versions allows you to see how far you've come, what worked, what didn't and provides documentary evidence of user-centred research, design and development. This is particularly useful information for a Government Service Standard assessment.</p> <p>Managing multiple versions of prototype code can soon become cumbersome and error prone. Although naming conventions, git branching or tagging and multiple deployment environments can help with this, we need a simple solution. The approach I've developed is to structure your routes to make use of request parameters, such that you don't repeat yourself and avoid unnecessary duplication of generic routing code. This allows you to focus on what you really want to iterate on; the content, layout and structure of what your users are going to see.</p>","tags":["GOV.UK","JavaScript","Node.js","Prototype"]},{"location":"blog/2016/02/23/rapid-prototype-versioning/#example","title":"Example","text":"<p>This is prototype code only, not production-ready, the aim here is to enable rapid change so we can learn as much as possible about our users' experience and interaction with the service.</p> <p>Here's how to do it using the GOV.UK Prototype Kit which uses Node.js, the Express.js framework and Nunjucks templating engine at it's core, although you could just as easily apply this same approach to your favourite web application development tools.</p> <p>Directory structure:</p> <pre><code>\u251c\u2500\u2500 app/\n\u251c\u2500\u2500 assets/\n\u251c\u2500\u2500 views/\n\u2502   \u251c\u2500\u2500 beta-v1/\n\u2502   \u251c\u2500\u2500 beta-v2/\n\u2502   \u251c\u2500\u2500 beta-v3/\n\u2502   \u2502   \u251c\u2500\u2500 data/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 AB1234.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 AB2345.json\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 AB3456.json\n\u2502   \u2502   \u251c\u2500\u2500 applications.html\n\u2502   \u2502   \u251c\u2500\u2500 draft.html\n\u2502   \u2502   \u251c\u2500\u2500 approved.html\n\u2502   \u2502   \u251c\u2500\u2500 rejected.html\n\u2502   \u251c\u2500\u2500 routes.js\n</code></pre> <p>My URLs are structured in a RESTful way, with the addition of the leading <code>/:version</code> parameter. My resources here are \"applications\", where <code>/applications</code> is a collection of applications, <code>/applications/AB1234</code> is a specific application and <code>/applications/AB1234/draft</code> is a draft of application AB1234. Here's the URL routing code for this:</p> <pre><code>var express = require(\"express\");\nvar router = express.Router();\nvar fs = require(\"fs\");\n\nrouter.get(\"/:version/applications/:application/draft\", function (req, res) {\n  var version = req.params.version;\n  var application = req.params.application;\n  var data = fs.readFileSync(\n    __dirname + \"/views/\" + version + \"/data/\" + application + \".json\",\n  );\n  var parsedData = JSON.parse(data);\n  res.render(version + \"/draft\", {\n    data: parsedData,\n    application: application,\n    version: version,\n  });\n});\n</code></pre> <p>In the above <code>GET</code> request handler, <code>/:version</code> corresponds to the directory name within <code>views</code>, such as <code>/beta-v2/applications/AB2345/draft</code>. Likewise <code>:application</code> corresponds to the name of a file inside the <code>data</code> directory which contains the structured JSON data that is passed to the <code>draft.html</code> template. When I want to make a new iteration I just duplicate the last version directory in <code>views</code> and set about making changes based on user research feedback.</p> <p>I've also made good use of the templating engine, holding all variable data on each page in a structured JSON file, so the HTML templates are largely about presentational logic and layout of that data. This is in keeping with MVC software architecture and mimics how the data-driven UI would receive data from an API. This means I can make very quick changes to page content without affecting layout that I might want to preserve between versions, and vice versa.</p> <p>Combine this with an index page with links to each version, a date or sprint each iteration was created and a change log for each iteration and you'll have a rich visual history of your application prototyping.</p> <p> Share on Bluesky</p> <p> Share on Twitter</p>","tags":["GOV.UK","JavaScript","Node.js","Prototype"]},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2025/#2025","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2024/#2024","title":"2024","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/archive/2021/#2021","title":"2021","text":""},{"location":"blog/archive/2020/","title":"2020","text":""},{"location":"blog/archive/2020/#2020","title":"2020","text":""},{"location":"blog/archive/2019/","title":"2019","text":""},{"location":"blog/archive/2019/#2019","title":"2019","text":""},{"location":"blog/archive/2018/","title":"2018","text":""},{"location":"blog/archive/2018/#2018","title":"2018","text":""},{"location":"blog/archive/2016/","title":"2016","text":""},{"location":"blog/archive/2016/#2016","title":"2016","text":""},{"location":"blog/archive/2014/","title":"2014","text":""},{"location":"blog/archive/2014/#2014","title":"2014","text":""},{"location":"blog/category/software-development/","title":"Software Development","text":""},{"location":"blog/category/software-development/#software-development","title":"Software Development","text":""},{"location":"blog/category/health/","title":"Health","text":""},{"location":"blog/category/health/#health","title":"Health","text":""},{"location":"blog/category/mash-software/","title":"Mash Software","text":""},{"location":"blog/category/mash-software/#mash-software","title":"Mash Software","text":""},{"location":"blog/page/2/","title":"Blog","text":""},{"location":"blog/page/2/#blog","title":"Blog","text":""},{"location":"blog/category/software-development/page/2/","title":"Software Development","text":""},{"location":"blog/category/software-development/page/2/#software-development","title":"Software Development","text":""}]}